version: '3.8'

services:
  redis:
    image: redis:7.4
    ports:
      - "6379:6379"
    networks:
      - crypto_network
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3

  backend:
    build:
      context: ./crypto
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./crypto:/app
    depends_on:
      - redis
    env_file:
      - ./crypto/.env
    environment:
      - DEBUG=False
    networks:
      - crypto_network
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/index/"]
      interval: 30s
      timeout: 5s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - crypto_network
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 5s
      retries: 3

  celery_worker:
    image: python:3.10
    command: sh -c "cd app && pip install --no-cache-dir -r requirements.txt && celery -A crypto worker --loglevel=info "
    volumes:
      - ./crypto:/app
    depends_on:
      - redis
      - backend
    networks:
      - crypto_network

  celery_beat:
    image: python:3.10
    command: sh -c "cd app && pip install --no-cache-dir -r requirements.txt && celery -A crypto beat --loglevel=info"
    volumes:
      - ./crypto:/app
    depends_on:
      - redis
      - backend
    networks:
      - crypto_network

networks:
  crypto_network:
